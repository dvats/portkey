% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/portkey.R
\name{portkey}
\alias{portkey}
\title{Portkey two-coin algorithm}
\usage{
portkey(prop, curr, beta = 0.99, pf, Cprop, Ccurr, ...)
}
\arguments{
\item{prop}{The proposed value in the MCMC step}

\item{curr}{The current value in the MCMC step}

\item{beta}{The portkey parameter with default being .99. If beta = 1, this is the regular two-coin algorithm}

\item{pf}{A function that produces a Bern(p) realization, with argument \code{value} for the state 
of the Markov chain}

\item{Cprop}{Upper bound for the proposed value}

\item{Ccurr}{Upper bound for the current value}

\item{...}{additional arguments that go into \code{pf} and \code{Cf}}
}
\value{
a variable \code{x} which is either \code{curr} or \code{prop} and integer \code{loops} that returns the number 
    of loops the Bernoulli factory took
}
\description{
Portkey two-coin algorithm
}
\examples{
# The following example implements the portkey-two coin algorithm for a
# Gamma mixture of Weibulls as presented in Vats et. al. (2020)
set.seed(10)  # seed is chosen so that example is fast
Cf <- function(value, k)
{
return(k/(exp(1)*value))
}
pf <- function(value, k, lam1, a1, b1)
{
lam1 <- rgamma(1, shape = a1, rate = b1)
dweibull(value, shape = k, scale = lam1)/Cf(value = value, k = k)
}
mcmc <- function(N = 1e3, beta = .95, k = 5, a1 = 2, b1 = 5)
{
out <- numeric(length = N)
loops <- numeric(length = N)
out[1] <- .1
acc <- 0
for(i in 2:N)
{
	prop <- rnorm(1, out[i-1], sd = sqrt(.001))
	if(prop < 0) 
	{
		out[i] <- out[i-1]
		next
	}
	interim <- portkey(prop = prop, curr = out[i-1], pf = pf, Cprop = Cf(prop, k), 
		Ccurr = Cf(out[i-1], k), beta = beta, k = k, a1 = a1, b1 = b1)
	out[i] <-  interim[[1]]
	if(out[i] != out[i-1]) acc <- acc+1
	loops[i] <- interim[[2]]
}
return(list("mcmc" = out, "loops" = loops, "accept" = acc/N))
}

a1 <- 10
b1 <- 100
k <- 10

bark <- mcmc(N = 5e3, beta = 1,  k = 10, a1 = 10, b1 = 100)
port <- mcmc(N = 5e3, beta = .99, k = 10, a1 = 10, b1 = 100)
plot(1:5e3, bark$loops, pch = 3)
points(1:5e3, port$loops, pch = 1, col = "red")
par(mfrow = c(1,2))
acf(bark$mcmc)
acf(port$mcmc)
par(mfrow = c(1,1))
}
\author{
Dootika Vats, \email{dootika@iitk.ac.in}
}
